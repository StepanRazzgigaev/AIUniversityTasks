Структура: Отсотрированный дву-направленный связный список.

Знаю, что по операциям вставки эта структура не оптимальна.
Куча, увы, тоже не подходит (удаление максимального ведет к необходимости re-Heap).

Сама идея быстрого доступа к min И Max подразумевает 
Пребывание структуры в “отсортированном” состоянии.

Реализовывать дву-направленный список не стал, 
Ибо есть ощущение, что требовалось совсем иное (да и тривиально).
Но другого быстро не придумал.
============================================================




возможно ли выполнять все операции за O(1)?  Нет. Обоснование:

Для быстрого доступа\удаления к минимальному и максимальному элементу, структура должна быть отсортирована (как массив, или как куча).
Операция вставки произвольного элемента предполагает, что после ее завершение необходимо восстановить это свойство структуры.
А значит, либо вставка в конец\начало + пересортировка, либо сразу поиск (основанный на сортировке) места для вставки.
Таким образом, “стоимость” пересортировки\ ребалансировки структуры после внесения нового элемента входит в “Стоимость” операции по вставке.
И эта пересортировка (в произвольном случае) не может иметь сложность O(1).
Даже в  случае той же кучи, ребалансировка после вставки будет стоить в основном O(log N) 
(для того, чтоб элемент поднялся на нужное место в куче)
Для массива (или списка) тоже "небесплатно".
Иными словами, O(1) не получается.

